var CircularProgressBar=function(){"use strict";function t(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}const e={colorCircle:!1,colorSlice:"#00a1ff",end:264,fontColor:"#365b74",fontSize:"1.6rem",fontWeight:400,lineargradient:!1,number:!0,round:!1,fill:"none",unit:"%",rotation:-90,opacity:10,size:200,stroke:10};return class{constructor(r){t(this,"initial",(t=>{if("IntersectionObserver"in window){const e=new IntersectionObserver(((t,e)=>{t.map((t=>{t.isIntersecting&&t.intersectionRatio>.75&&(this.cSVG(t.target),e.unobserve(t.target))}))}),{root:null,rootMargin:"0px",threshold:1});t.map((t=>{e.observe(t)}))}else t.map((t=>{this.cSVG(t)}))})),t(this,"progressBar",((t,e,r)=>{r.number&&t.insertAdjacentElement("beforeend",this.percentEl(r));const i={fill:"none","stroke-width":r.stroke,"stroke-dasharray":"264","stroke-linecap":r.round?"round":""},n=document.querySelector(`.${this.pieName}-circle-${r.index}`);this.sAttr(n,i,!1),this.animationTo({...r,element:n},!0),n.setAttribute("style",`transform:rotate(${r.rotation}deg);transform-origin: 50% 50%`),n.setAttribute("stroke",r.lineargradient?`url(#linear-${r.index})`:r.colorSlice),e.setAttribute("style",`width:${r.size}px;height:${r.size}px;`)})),t(this,"sDashOffset",((t,e,r)=>{const i=264-t/100*(r?2.64*(100-r):264);return e?-i:i})),t(this,"animationTo",((t,r=!1)=>{const i=Math.round(t.percent),n=JSON.parse(document.querySelector(`[data-pie-index="${t.index}"]`).dataset.pie),s=document.querySelector(`.${this.pieName}-circle-${t.index}`);if(!s)return;let o=JSON.parse(s.getAttribute("data-angel"));const a=r?t:{...e,...n,...t},c=document.querySelector(`.${this.pieName}-percent-${t.index}`);if(a.animationOff)return a.number&&(c.textContent=""+a.percent),void s.setAttribute("stroke-dashoffset",this.sDashOffset(a.percent,a.inverse));if(0==i&&(a.number&&(c.textContent="0"),s.setAttribute("stroke-dashoffset","264")),i>100||i<=0||o===i)return;let l,d=r?0:o;const h=1e3/(a.speed||1e3);let u=performance.now();const m=t=>{l=requestAnimationFrame(m);const e=t-u;e>=h-.1&&(u=t-e%h,o>=a.percent?d--:d++),s.setAttribute("stroke-dashoffset",this.sDashOffset(d,a.inverse,a.cut)),c&&a.number&&(c.textContent=""+d),d===i&&(s.setAttribute("data-angel",d),cancelAnimationFrame(l))};requestAnimationFrame(m)})),t(this,"percentEl",(t=>{const e=document.createElementNS(this.svg,"text");e.insertAdjacentElement("afterbegin",this.cTspan(`${this.pieName}-percent-${t.index}`)),e.insertAdjacentElement("beforeend",this.cTspan(`${this.pieName}-unit-${t.index}`,t.unit));const r={x:"50%",y:"50%",fill:t.fontColor,"font-size":t.fontSize,"font-weight":t.fontWeight,"text-anchor":"middle",dy:t.textPosition||"0.35em"};return this.sAttr(e,r,!1),e})),t(this,"cTspan",((t,e)=>{const r=document.createElementNS(this.svg,"tspan");return r.classList.add(t),e&&(r.textContent=e),r})),t(this,"cSVG",(t=>{const r=JSON.parse(t.getAttribute("data-pie")),i=t.getAttribute("data-pie-index"),n={...e,...r,index:i},s=document.createElementNS(this.svg,"svg"),o={role:"img",width:n.size,height:n.size,viewBox:"0 0 100 100"};this.sAttr(s,o,!1),n.colorCircle&&s.appendChild(this.cCircle(n,"bottom")),n.lineargradient&&s.appendChild(this.cGradient(n)),s.appendChild(this.cCircle(n,"top",!0)),t.appendChild(s),this.progressBar(s,t,n)})),t(this,"cGradient",(({index:t,lineargradient:e})=>{const r=document.createElementNS(this.svg,"defs"),i=document.createElementNS(this.svg,"linearGradient");i.id="linear-"+t;const n=[].slice.call(e);r.appendChild(i);let s=0;return n.map((t=>{const e=document.createElementNS(this.svg,"stop"),r={offset:s+"%","stop-color":""+t};this.sAttr(e,r,!1),i.appendChild(e),s+=100/(n.length-1)})),r})),t(this,"cCircle",((t,e,r=!1)=>{const i=document.createElementNS(this.svg,"circle");let n={};if(t.cut){const e=264-2.64*(100-t.cut);n={"stroke-dasharray":264,"stroke-linecap":t.round?"round":"","stroke-dashoffset":t.inverse?-e:e,style:`transform:rotate(${t.rotation}deg);transform-origin: 50% 50%`}}const s={fill:t.fill,stroke:t.colorCircle,"stroke-width":t.strokeBottom||t.stroke,...n};t.strokeDasharray&&Object.assign(s,{"stroke-dasharray":t.strokeDasharray});const o={cx:"50%",cy:"50%",r:42,"shape-rendering":"geometricPrecision","data-angle":r?0:"",..."top"===e?{class:`${this.pieName}-circle-${t.index}`}:s};return this.sAttr(i,o,!1),i})),t(this,"sAttr",((t,e,r=!1)=>{for(const i in e)r?t.setAttributeNS(null,i,e[i]):t.setAttribute(i,e[i])})),this.pieName=r,this.svg="http://www.w3.org/2000/svg";const i=document.querySelectorAll("."+r),n=[].slice.call(i);n.map(((t,e)=>{t.setAttribute("data-pie-index",e+1)})),this.initial(n)}}}();
